name: Issue Closed Celebration

on:
  issues:
    types: [closed]

jobs:
  issue-closed-handler:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Process closed issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Ëé∑Âèñissue‰ø°ÊÅØ
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_AUTHOR="${{ github.event.issue.user.login }}"
          CREATED_AT="${{ github.event.issue.created_at }}"
          CLOSED_AT="${{ github.event.issue.closed_at }}"
          
          echo "Issue #$ISSUE_NUMBER closed by $ISSUE_AUTHOR"
          echo "Created at: $CREATED_AT"
          echo "Closed at: $CLOSED_AT"

          # Ëé∑ÂèñÂàÜÈÖçÁöÑÁÆ°ÁêÜ‰∫∫Âëò
          ASSIGNEES_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}")
          
          ASSIGNEE_LIST=$(echo "$ASSIGNEES_JSON" | jq -r '.assignees[]?.login' | tr '\n' ' ' | sed 's/ $//')
          echo "Assignees: $ASSIGNEE_LIST"

          # Ëé∑Âèñ‰ªéissueÂàõÂª∫Âà∞ÂÖ≥Èó≠ÊúüÈó¥ÁöÑÊâÄÊúâÊèê‰∫§
          TOP_USER=""
          TOP_COUNT=0
          HAS_COMMITS=false
          
          # Ê£ÄÊü•ÊòØÂê¶ÊúâÊèê‰∫§
          if git log --since="$CREATED_AT" --until="$CLOSED_AT" --oneline > /dev/null 2>&1; then
            # ‰øÆÂ§çÔºö‰ΩøÁî®Ê†ºÂºèÂ≠óÁ¨¶‰∏≤Á°Æ‰øùËé∑ÂèñÂÆåÊï¥Áî®Êà∑Âêç
            COMMITS=$(git log --since="$CREATED_AT" --until="$CLOSED_AT" --pretty=format:"%an" | sort | uniq -c | sort -nr)
            if [ -n "$COMMITS" ] && [ "$COMMITS" != "" ]; then
              HAS_COMMITS=true
              # ‰øÆÂ§çÔºöÊ≠£Á°ÆÊèêÂèñÂÆåÊï¥Áî®Êà∑Âêç
              TOP_CONTRIBUTOR=$(echo "$COMMITS" | head -n 1)
              TOP_COUNT=$(echo "$TOP_CONTRIBUTOR" | awk '{print $1}')
              TOP_USER=$(echo "$TOP_CONTRIBUTOR" | awk '{$1=""; print $0}' | sed 's/^ *//') # ÁßªÈô§ÂâçÈù¢ÁöÑÁ©∫Ê†º
              echo "Top contributor: '$TOP_USER' with $TOP_COUNT commits"
            fi
          fi

          # Ëé∑ÂèñissueÁöÑÊâÄÊúâËØÑËÆ∫Âπ∂ÁªüËÆ°ÊúâÊùÉÈôêÁî®Êà∑ÁöÑËØÑËÆ∫Ê¨°Êï∞
          echo "Fetching issue comments..."
          COMMENTS_RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}/comments?per_page=100")
          
          # ÁªüËÆ°ÊØè‰∏™Áî®Êà∑ÁöÑËØÑËÆ∫Ê¨°Êï∞ÔºàÊéíÈô§issue‰ΩúËÄÖÔºâ
          declare -A COMMENT_COUNTS
          HAS_COMMUNITY_CONTRIBUTORS=false
          TOP_COMMENTER=""
          TOP_COMMENT_COUNT=0
          TOTAL_COMMENTS=0
          
          # ‰øÆÂ§çÔºö‰ΩøÁî®jqÊ≠£Á°ÆËß£ÊûêËØÑËÆ∫Êï∞ÊçÆ
          COMMENT_COUNT=$(echo "$COMMENTS_RESPONSE" | jq 'length')
          echo "Total comments found: $COMMENT_COUNT"
          
          if [ "$COMMENT_COUNT" -gt 0 ]; then
            # ÊèêÂèñÊâÄÊúâËØÑËÆ∫ËÄÖÔºàÊéíÈô§issue‰ΩúËÄÖÔºâ
            COMMENTERS=$(echo "$COMMENTS_RESPONSE" | jq -r '.[] | select(.user.login != "'$ISSUE_AUTHOR'") | .user.login')
            
            if [ -n "$COMMENTERS" ]; then
              while read -r commenter; do
                if [ -n "$commenter" ]; then
                  # Ê£ÄÊü•Áî®Êà∑ÊùÉÈôê
                  PERMISSION_CHECK=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                    "https://api.github.com/repos/${{ github.repository }}/collaborators/${commenter}/permission" 2>/dev/null || echo '{"permission":"none"}')
                  
                  PERMISSION_LEVEL=$(echo "$PERMISSION_CHECK" | jq -r '.permission')
                  
                  # Âè™ÁªüËÆ°ÊúâÊùÉÈôêÁöÑÁî®Êà∑Ôºàadmin, write, maintainÔºâ
                  if [ "$PERMISSION_LEVEL" = "admin" ] || [ "$PERMISSION_LEVEL" = "write" ] || [ "$PERMISSION_LEVEL" = "maintain" ]; then
                    ((COMMENT_COUNTS["$commenter"]++))
                    HAS_COMMUNITY_CONTRIBUTORS=true
                    TOTAL_COMMENTS=$((TOTAL_COMMENTS + 1))
                    echo "Found comment from staff: $commenter (permission: $PERMISSION_LEVEL)"
                    
                    # Êõ¥Êñ∞ÊúÄÂ§öËØÑËÆ∫ËÄÖ
                    if [ "${COMMENT_COUNTS["$commenter"]}" -gt "$TOP_COMMENT_COUNT" ]; then
                      TOP_COMMENT_COUNT="${COMMENT_COUNTS["$commenter"]}"
                      TOP_COMMENTER="$commenter"
                    fi
                  fi
                fi
              done <<< "$COMMENTERS"
            fi
          fi

          echo "Total community comments: $TOTAL_COMMENTS"
          echo "Top commenter: $TOP_COMMENTER with $TOP_COMMENT_COUNT comments"

          # ÊûÑÂª∫Ê∂àÊÅØ
          MESSAGE="@$ISSUE_AUTHOR ‰Ω†ÁöÑÈóÆÈ¢òËß£ÂÜ≥Âï¶ÔºåÂòªÂòª üéâ\n\n"
          
          # Â¶ÇÊûúÊúâÂàÜÈÖçÁöÑÁÆ°ÁêÜ‰∫∫ÂëòÔºåÊÑüË∞¢‰ªñ‰ª¨
          if [ -n "$ASSIGNEE_LIST" ] && [ "$ASSIGNEE_LIST" != "null" ]; then
            # ‰∏∫ÊØè‰∏™ÂàÜÈÖçËÄÖÊ∑ªÂä†@
            ASSIGNEE_MENTIONS=""
            for assignee in $ASSIGNEE_LIST; do
              ASSIGNEE_MENTIONS+="@$assignee "
            done
            MESSAGE+="$ASSIGNEE_MENTIONS ÊÑüË∞¢‰Ω†‰ª¨ÁöÑ‰ªòÂá∫ÔºÅüëè\n\n"
          else
            MESSAGE+="ÊÑüË∞¢ÊâÄÊúâÂèÇ‰∏éËß£ÂÜ≥ÈóÆÈ¢òÁöÑË¥°ÁåÆËÄÖÔºÅüëè\n\n"
          fi
          
          # ‰ª£Á†ÅË¥°ÁåÆÁªüËÆ°
          MESSAGE+="**‰ª£Á†ÅË¥°ÁåÆÁªüËÆ°Ôºö**\n"
          if [ "$HAS_COMMITS" = true ] && [ -n "$TOP_USER" ] && [ "$TOP_COUNT" -gt 0 ]; then
            MESSAGE+="üèÜ ÊúÄÈ´òË¥°ÁåÆÔºö@$TOP_USER Ôºà$TOP_COUNT Ê¨°Êèê‰∫§Ôºâ\n"
          else
            MESSAGE+="üìä ÊöÇÊó†‰ª£Á†ÅÊèê‰∫§Êï∞ÊçÆ\n"
          fi
          
          # Á§æÂå∫ËØÑËÆ∫Ë¥°ÁåÆÁªüËÆ°
          MESSAGE+="\n**Á§æÂå∫‰∫íÂä®ÁªüËÆ°Ôºö**\n"
          if [ "$TOTAL_COMMENTS" -gt 0 ]; then
            if [ -n "$TOP_COMMENTER" ] && [ "$TOP_COMMENT_COUNT" -gt 0 ]; then
              MESSAGE+="üí¨ ÊúÄÊ¥ªË∑ÉÂõûÂ§çÔºö@$TOP_COMMENTER Ôºà$TOP_COMMENT_COUNT Ê¨°ÂõûÂ§çÔºâ\n"
            fi
            MESSAGE+="üìù ÊÄªÂõûÂ§çÊï∞Ôºö$TOTAL_COMMENTS Êù°\n"
          else
            MESSAGE+="üí¨ ÊöÇÊó†Á§æÂå∫ÂõûÂ§çÊï∞ÊçÆ\n"
          fi

          MESSAGE+="\nÊÑüË∞¢Â§ßÂÆ∂ÁöÑÂÖ±ÂêåÂä™ÂäõÔºÅ‚ù§Ô∏è"

          # Ê∑ªÂä†ËØÑËÆ∫Âà∞Â∑≤ÂÖ≥Èó≠ÁöÑissue
          JSON_BODY=$(jq -n --arg body "$(echo -e "$MESSAGE")" '{"body": $body}')
          
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               -X POST \
               -d "$JSON_BODY" \
               "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}/comments"

          echo "Comment added to issue #$ISSUE_NUMBER"
          echo "Final message:"
          echo -e "$MESSAGE"
